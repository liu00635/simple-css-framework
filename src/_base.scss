@use 'variables';
@use 'sass:map';

//layout & spacing (container, grid system, flexbox, margin & padding
body {
    margin: 0 30px;
}

section {
    margin: 30px 0 0 0;
}

//lists
ul {
    margin: 0 0 0 30px;
    padding: 30px 0 0 0;
    list-style-type: variables.$list-ul;
}

ol {
    margin: 0 0 0 30px;
    padding: 30px 0 0 0;
    list-style-type: variables.$list-ol;
}

//buttons &links

@mixin simple-btn($btn-bg-color: map.get(variables.$theme, "primary"), $btn-text-color: map.get(variables.$theme, "light")) {
    background: $btn-bg-color;
    color: $btn-text-color;
    border-radius: variables.$border-radius;
    border: none;
    font-family: variables.$simple-font;
    font-size: variables.$font-size-xs;
    font-weight: variables.$font-semibold;
    padding: 7px 30px;
    display: inline-block;

}

button,
.btn,
.btn-primary {
    @include simple-btn();
}

.btn.btn-secondary {
    @include simple-btn(map.get(variables.$theme, "secondary"), map.get(variables.$theme, "dark"))
}

.btn.btn-success {
    @include simple-btn(map.get(variables.$theme, "success"), map.get(variables.$theme, "dark"))
}

.btn.btn-info {
    @include simple-btn(map.get(variables.$theme, "info"), map.get(variables.$theme, "dark"))
}

.btn.btn-warning {
    @include simple-btn(map.get(variables.$theme, "warning"), map.get(variables.$theme, "light"))
}

.btn.btn-danger {
    @include simple-btn(map.get(variables.$theme, "danger"), map.get(variables.$theme, "dark"))
}

//links
a {
    text-decoration: underline;
    color: map.get(variables.$theme, "primary")
}

//forms
form {
    max-width: 600px;
    margin: 30px;
    padding: 0;
}

.form-group {
    display: flex;
    flex-direction: column;
    padding: 15px 0;
}

input[type="text"],
input[type="email"] {
    border: 1px solid map.get(variables.$theme, "dark");
    padding: 6px;
    border-radius: variables.$border-radius;
}

//table
// Base table styles
.table-hover {
    width: 100%;
    border-collapse: collapse;
    margin: 20px 0;
    font-size: 16px;
    text-align: left;

    th,
    td {
        padding: 10px;
        border: 1px solid #ddd;
    }

    th {
        background-color: #343a40; // Dark background for the header
        color: white;
    }

    tbody tr {
        &:hover {
            background-color: #f1f1f1; // Light background on row hover
        }
    }

    // Hover effect for rows
    tr:nth-child(even) {
        background-color: #f9f9f9; // Light grey background for even rows
    }

    tr:nth-child(odd) {
        background-color: white; // White background for odd rows
    }

    // Responsive styles
    @media (max-width: 768px) {

        th,
        td {
            font-size: 14px;
            padding: 8px;
        }
    }
}

// Add specific styles for the table-bordered class
.table-bordered {

    th,
    td {
        border: 1px solid #ddd;
    }
}

// Large table styles for table-lg
.table-lg {
    font-size: 18px; // Larger font size for table-lg class
}

// Table head dark styling for table-head-dark class
.table-head-dark {
    th {
        background-color: #343a40; // Dark background color for the header
        color: white; // White text color in the header
    }
}

// Responsive table styling for table-responsive class
.table-responsive {
    overflow-x: auto; // Allow horizontal scrolling for smaller screens
    -webkit-overflow-scrolling: touch; // Smooth scrolling on touch devices
}

//flexbox styling
.box {
    width: 100px;
    border-radius: 4px;
}